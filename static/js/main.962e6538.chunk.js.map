{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","onChange","type","App","state","searchText","axios","get","then","response","setState","data","this","filteredMonsters","filter","toLowerCase","includes","event","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAAe,I,kBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCFbC,G,MAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAW,YAAhB,SACKD,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLjBM,G,MAAY,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACrC,OACC,uBACIX,UAAW,SACXY,KAAM,SACNF,YAAaA,EACbC,SAAUA,MC2BHE,E,kDA1Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXP,SAAW,GACXQ,WAAY,IAJF,E,qDAOd,WAAqB,IAAD,OAClBC,IAAMC,IAAI,8CACLC,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACb,SAASY,EAASE,Y,oBAGzD,WAAU,IAAD,OACP,EAA+BC,KAAKR,MAA7BP,EAAP,EAAOA,SAAUQ,EAAjB,EAAiBA,WACXQ,EAAmBhB,EAASiB,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASX,EAAWU,kBACnG,OAEI,sBAAKzB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWU,YAAa,kBAAmBC,SAAU,SAAAgB,GAAS,EAAKP,SAAS,CAACL,WAAYY,EAAMC,OAAOC,WACtG,cAAC,EAAD,CAAUtB,SAAUgB,W,GAtBZO,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.962e6538.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport \"./card.styles.css\"\n\nexport const Card = (props) => (\n    <div className={\"card-container\"}>\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from \"react\";\n\nimport {Card} from \"../card/card.component\";\nimport './card-list.styles.css'\n\nexport const CardList = props => (\n    <div className={\"card-list\"}>\n        {props.monsters.map(monster => (\n           <Card key={monster.id} monster={monster} />\n        ))}\n    </div>\n)","import React from \"react\";\nimport \"./search-box.styles.css\"\n\nexport const SearchBox = ({placeholder, onChange}) => {\n   return (\n    <input\n        className={\"search\"}\n        type={\"search\"}\n        placeholder={placeholder}\n        onChange={onChange}\n    />\n   )\n}","import React, {Component} from \"react\";\nimport axios from \"axios\"\n\nimport logo from './logo.svg';\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters : [],\n      searchText: \"\"\n    }\n  }\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => this.setState({monsters:response.data}))\n  }\n\n  render() {\n    const {monsters, searchText} = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchText.toLowerCase()))\n    return (\n\n        <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n          <SearchBox placeholder={\"search monsters\"} onChange={event =>{this.setState({searchText: event.target.value})}} />\n          <CardList monsters={filteredMonsters}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}